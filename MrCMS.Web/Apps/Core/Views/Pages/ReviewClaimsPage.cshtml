@model MrCMS.Web.Apps.Core.Pages.ReviewClaimsPage
@{
    ViewBag.Title = "Vet Claims";
    Layout = "~/Apps/core/views/shared/_BaseLayout.cshtml";
}

@helper Truncate(string input, int length)
{
if (input.Length <= length)
{
        @input
}
else
{
        @input.Substring(0, length)<text>...</text>
}
}

@helper StatusColor(bool input)
{
var response = "";
if (input)
{
    response =
            "success";

}
else
{
    response = "danger";

}
    @response
}

<div class="row">

    <div class="col-md-12 ">
        <div class="callout callout seegreen " style="margin-left: -5px">
            <h4>Tip!</h4>
            <p>Review claims that have been submitted for review.</p>
        </div>
        <div class="row">
            <div class="col-md-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon seegreen"><i class="fa fa-clock-o"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Claim Batch</span>
                        <span class="info-box-number" id="claimbatchh"></span>

                    </div>


                    <!-- /.info-box-content -->
                </div>

            </div>
            <div class="col-md-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-maroon-active"><i class="fa fa-hospital-o"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">No of Providers</span>
                        <span class="info-box-number" id="noofprovider"></span>
                    </div>
                    <!-- /.info-box-content -->
                </div>

            </div>
            <div class="col-md-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-green"><i class="fa fa-money"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Amount Captured</span>

                        <span class="info-box-number" id="amountcaptured"> </span>
                    </div>
                    <!-- /.info-box-content -->
                </div>

            </div>
            <div class="col-md-3 col-sm-6 col-xs-12">
                <div class="info-box">
                    <span class="info-box-icon bg-red"><i class="fa fa-money"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text">Processed Amount</span>
                        <span class="info-box-number" id="processedamount"></span>
                        <span class="info-box-text"><small>Difference</small> </span>
                        <span class="info-box-number"><small style="color:red" id="difference">-900</small></span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->
            </div>

        </div>
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Search Claim</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm("IncomingClaims", "ClaimsPage", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                <div class="box-body">
                    <div class="form-group">

                        <label class="col-sm-2 control-label" for="year">Batch</label>
                        <div class="col-sm-3">
                            @Html.DropDownList("Batch", new SelectList(ViewBag.BatchList, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">

                        <label class="col-sm-2 control-label" for="Provider_list">Provider</label>
                        <div class="col-sm-3">
                            @Html.DropDownList("Provider_list", new SelectList(ViewBag.PrvidersList, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">

                        <label class="col-sm-2 control-label" for="Month_list">Month</label>
                        <div class="col-sm-3">
                            <select id='Month_list' class="form-control" name="Month_list">
                                <option selected value='-1'>--All Month--</option>
                                <option value='1'>Janaury</option>
                                <option value='2'>February</option>
                                <option value='3'>March</option>
                                <option value='4'>April</option>
                                <option value='5'>May</option>
                                <option value='6'>June</option>
                                <option value='7'>July</option>
                                <option value='8'>August</option>
                                <option value='9'>September</option>
                                <option value='10'>October</option>
                                <option value='11'>November</option>
                                <option value='12'>December</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">

                        <label class="col-sm-2 control-label" for="year">Year</label>
                        <div class="col-sm-3">
                            @Html.DropDownList("Year", new SelectList(ViewBag.YearList, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">

                        <label class="col-sm-2 control-label" for="year">Zone</label>
                        <div class="col-sm-3">
                            @Html.DropDownList("Zone", new SelectList(ViewBag.ZoneList, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label class="col-sm-2 control-label" for="Delivered_By">Delivered By</label>

                        <div class="col-sm-7">

                            @Html.TextBox("Delivered_By", null, new { @class = "form-control", @placeholder = "Enter Full Name" })
                        </div>

                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="User_list">Transfered To</label>

                        <div class="col-sm-7">

                            @Html.DropDownList("User_list", new SelectList(ViewBag.UserList, "Id", "Name"), new { @class = "form-control" })
                        </div>

                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="User_list">Date Received From</label>

                        <div class="col-sm-2">

                            <div class="input-group">

                                <span class="input-group-addon"><input type="checkbox"  class="input-group-addon"/></span>
                                @Html.TextBox("DateReceived", (string)ViewBag.Defaultdate, new { @class = "form-control", @placeholder = "MM/DD/YYYY" })
                            </div>

                        </div>
                        <div class="col-sm-2">

                            <div class="input-group">


                                @Html.TextBox("DateReceived", (string)ViewBag.Defaultdate, new { @class = "form-control", @placeholder = "MM/DD/YYYY" })
                            </div>

                        </div>

                    </div>*@

                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <button class="btn btn-default" type="submit">Reset</button>
                    <button class="btn btn-info pull-right" type="button" id="scr_button">Search</button>
                </div>
            }
        </div>

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Claim Batch List</h3>

            <div class="box-tools">
                @using (Html.BeginForm("DoApproveReview", "ClaimsPage", FormMethod.Post, new {@id="approveform" }))
                {

                    @Html.Hidden("hidden_selectedIDs");

                    <input type="button" class="btn btn-sm btn-success pull-right" value="Approve All Selected" onclick="submitforApproval();" />

                }

                 </div>
            </div><!-- /.box-header -->
            <div class="box-body">
                <table id="incomingclaimlist" class="mdl-data-table mdl-data-table--selectable" width="100%">
                    <thead>
                        <tr>
                            <th>

                                <input type="checkbox" id="chk_selectall" name="hk_selectall">




                            </th>
                            <th class="mdl-data-table__cell--non-numeric">Id</th>
                            <th class="mdl-data-table__cell--non-numeric">GroupName</th>
                            <th class="mdl-data-table__cell--non-numeric">Provider Address</th>
                            <th class="mdl-data-table__cell--non-numeric">Claims Period</th>
                            <th class="mdl-data-table__cell--non-numeric">Provider</th>
                            <th class="mdl-data-table__cell--non-numeric">Claim Batch</th>
                            <th class="mdl-data-table__cell--non-numeric">Narration</th>
                            <th class="mdl-data-table__cell--non-numeric">Delivery Count</th>
                            <th class="mdl-data-table__cell--non-numeric">Claims Count</th>
                            <th class="mdl-data-table__cell--non-numeric">Initial Amount</th>
                            <th class="mdl-data-table__cell--non-numeric">Processed Amount</th>
                            <th class="mdl-data-table__cell--non-numeric">Difference</th>
                            <th class="mdl-data-table__cell--non-numeric">Submitted By</th>
                            <th class="mdl-data-table__cell--non-numeric">Date Sumitted for Review</th>
                            <th class="mdl-data-table__cell--non-numeric"></th>

                        </tr>
                    </thead>
                    <tbody></tbody>

                </table>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div>
</div>

<script>

    $(function () {

        var totalapproved = 0;
        $("#chk_selectall").prop('checked', false);
        $.ajaxSetup({
            cache: false
        });


        bodytable$ = $('#incomingclaimlist').dataTable({

            "sAjaxSource": '../ClaimsPage/GetClaimBatchReviewJson',

            "scrollY": '50vh',
            "scrollX": true,
            "bProcessing": true,
            "bServerSide": true,
            'columnDefs': [{
                'targets': [0,1,2,3,4,5,6,7],
                'className': 'mdl-data-table__cell--non-numeric',
                'searchable': false,
                'orderable': false,


            }],
            "fnServerData": function (sSource, aoData, fnCallback) {

                aoData.push({ "name": "Provider_list", "value": $('#Provider_list').val() }, { "name": "Month_list", "value": $('#Month_list').val() }, { "name": "year", "value": $('#Year').val() }, { "name": "Batch", "value": $('#Batch').val() }, { "name": "Zone", "value": $('#Zone').val() });
                $.ajax({
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success": function (msg) {
                        $('#claimbatchh').text(msg.batch);

                        $('#amountcaptured').text(msg.totalcaptured);
                        $('#processedamount').text(msg.totalprocessed);
                        $('#noofprovider').text(msg.providercount);
                        $('#difference').text(msg.difference);
                        fnCallback(msg);


                    },
                    error: function (xhr, textStatus, error) {
                        if (typeof console == "object") {
                            console.log(xhr.status + "," + xhr.responseText + "," + textStatus + "," + error);
                        }
                    }
                });
            },
            "bPaginate": true,
            "bLengthChange": true,
            "iDisplayLength": 50,

            "bFilter": false,
            "bSort": true,
            "bInfo": true,
            "bAutoWidth": false,
            "aoColumns": [
      {
          'searchable': false,
          'orderable': false,
          render: function (data, type, row) {

              return '<input type="checkbox" class="mdl-checkbox__input chkbox_datatable"  >';

          },
      },
  
                  { "mDataProp": "Id", "bVisible": true, sClass: "row_id" },
                     { "mDataProp": "GroupName", "bVisible": false },
                
                { "mDataProp": "PRoviderAddress", "bVisible": false },
     { "mDataProp": "month_string", "bVisible": true },

                {
                    "mRender": function (data, type, row) {
                        return '<span  title="' + row.PRoviderAddress + '" >' + row.Provider + '</span>';
                    }
                },
                 { "mDataProp": "Batch" },
                    { "mDataProp": "narration", "bVisible": true },
                     { "mDataProp": "deliveryCount" },
                      { "mDataProp": "claimscount" },
                 { "mDataProp": "totalAmount" },
                  { "mDataProp": "totalProccessed" },
                   { "mDataProp": "difference" },
                    { "mDataProp": "CapturedBy" },
                     { "mDataProp": "DateSubmitedForVetting" },
{
                              "mRender": function (data, type, row) {
                                  return '<a href="/claims/expandclaim?Id=' + row.Id + '" class="btn bg-navy btn-flat btn-xs"><i class="fa fa-expand" aria-hidden="true"></i> Expand Batch</a> <a href="/ClaimsPage/RejectToRevet?Id=' + row.Id + '" class="btn btn-warning btn-flat btn-xs modal-link"> <i class="fa fa fa-undo" aria-hidden="true"> Re-Vet Batch</i></a>';
                              }
                          }





            ]

   , "drawCallback": function (settings) {
       var api = this.api();
       var rows = api.rows({ page: 'current' }).nodes();
       var last = null;

       api.column(1, { page: 'current' }).data().each(function (group, i) {
           if (last !== group) {
               $(rows).eq(i).before(
                   '<tr style="background-color:#0aa89e;font-weight: bold;color:white;"><td colspan="100%"  class="mdl-data-table__cell--non-numeric">' + group + '</td></tr>'
               );

               last = group;
           }
       });
   }


        });
        //$('#datepicker').datepicker({
        //    autoclose: true
        //});
        //$('#datepicker2').datepicker({
        //    autoclose: true
        //});

        $('#scr_button').on('click', function (e) {
            refreshTable();
        });
        function refreshTable() {
            $('#incomingclaimlist').DataTable().ajax.reload();
        }


        $("#chk_selectall").change(function () {

            if (this.checked) {
                //Do stuff
                //$('.chkbox_datatable')
                bodytable$.$('tr').each(function (index, rowhtml) {
                    $('.chkbox_datatable').prop('checked', true);
                    console.log(rowhtml);
                 
                    

                    //alert(totalapproved);
                   
                });
            } else {


                // $('.chkbox_datatable').removeAttr('checked');
                bodytable$.$('tr').each(function (index, rowhtml) {
                    $('.chkbox_datatable').prop('checked', false);
                   
                    

                });


            }
        });


  
    });
    function submitforApproval() {
        
        totalapproved = 0;
        var totalbillcount = 0;
        var checkIds = [];
        bodytable$.$('tr').each(function (index, rowhtml) {
            var checked = $('input[type="checkbox"]:checked', rowhtml).length;
            if (checked == 1) {
                totalbillcount++;
                checkIds.push($('.row_id', rowhtml).text());

                $("td", rowhtml).each(function (index, shiit) {

                    //get the total
                    if (index == 9) {
                        totalapproved = parseFloat(totalapproved) + parseFloat(numeral($(shiit).text()).value());
                    }

                });
            }
        });
        $('#hidden_selectedIDs').val(checkIds);
        //alert($('#hidden_selectedIDs').val());

        //if (totalbillcount > 0) {
        //    swal({
        //        title: "Are you sure?",
        //        text: "You are about to approve ( " + totalbillcount + " ) bills which sums up to  ₦ " + totalapproved.toFixed(2),
        //        type: "warning",
        //        showCancelButton: true,
        //        confirmButtonClass: "btn-danger",
        //        confirmButtonText: "Yes, Approve It!",
        //        closeOnConfirm: false
        //    },
        //         function () {
        //             $('#approveform').submit();
        //         });
        //} else {
            

        //    swal("Oops", "You have not selected any bill!", "error")

        //}

        var texttt="You are about to approve ( " + totalbillcount + " ) bills which sums up to  ₦ " + totalapproved.toFixed(2);
        //alert(texttt);
        if (totalbillcount > 0) {
            swal({
                title: "Are you sure?",
                text: texttt,
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
    .then((willDelete) => {
        if (willDelete) {
            $('#approveform').submit();
        } else {
            swal("You changed your mind!");
        }
    });
        } else {
            swal("Oops", "You have not selected any bill!", "error")
        }
        //alert(totalapproved);
    }
</script>